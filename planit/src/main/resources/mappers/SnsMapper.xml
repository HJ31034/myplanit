<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.planit.mapper.sns.SnsMapper">


<!--메인 좋아요순 이미지 정렬   -->
		<select id="selectImgPost" resultType="com.planit.domain.sns.PostDTO">
	<![CDATA[
 
	select rn,postno,orgfilename,likescount,postcontent,realfilename from
	(select /*+ INDEX_DESC(seq_POSTNO_no) */
	rownum rn,p.postno,pf.no,fs.orgfilename,p.likescount,p.postcontent,fs.realfilename 
 	from postfiles pf join post p
 	on p.postno=pf.postno
 	and no in
 	(select
 	min(no)
 	from postfiles
 	group by postno)
    join files fs
    on pf.no=fs.no 
    and rownum <= #{parameter1} + #{parameter2} and p.delete_yn='N' 
 	order by likescount desc)
    WHERE rn > #{parameter1}
	]]>
		</select>
	 
	 
 
	 <select id="searchSNS" resultType="com.planit.domain.sns.PostDTO">
		
		<choose>
			<when test='keyField.equals("plantsname")'>
		<![CDATA[ 
 
		 select rn,no,orgfilename,likescount,postno,postcontent,plantscateno,realfilename  from
			(select /*+ INDEX_DESC(seq_POSTNO_no) */
			rownum rn, pf.no,fs.orgfilename,p.likescount,p.postno, p.postcontent,p.plantscateno,fs.realfilename 
 			from post p join postfiles pf 
 			on p.postno=pf.postno
 			and no in
 			(select
 			min(no)
 			from postfiles
 			group by postno)
             join files fs
            on pf.no=fs.no
            join usertoplants u
       	    on u.plantscateno=p.plantscateno 
            where u.plantsname LIKE #{keyword} and rownum <= #{startNum} + #{endNum} and p.delete_yn='N' 
 		    order by likescount desc)
            WHERE rn > #{startNum}
 		]]>
			</when>
			<when test='keyField.equals("userId")'>
		<![CDATA[ 
 
		 select rn,userid,profileimg,SUBSTR(accdescription, 1, 30) as accdescription from
        (select  rownum rn,a.userid,a.profileimg,a.accdescription
         from account a
         where a.userid like #{keyword} and rownum <= #{startNum} + #{endNum})
         WHERE rn > #{startNum}
 		 
		]]>
			</when>
			<when test='keyField.equals("postcontent")'>
		<![CDATA[ 
			 select rn,no,orgfilename,likescount,postno,postcontent,delete_yn,realfilename  from
			(select /*+ INDEX_DESC(seq_POSTNO_no) */
		    rownum rn, pf.no,fs.orgfilename,p.likescount,p.postno, p.postcontent,p.delete_yn,fs.realfilename 
 		    from postfiles pf join post p
 		    on p.postno=pf.postno
 		    and no in
 		    (select
 		    min(no)
 		    from postfiles
 		    group by postno)
   		    and p.postcontent LIKE #{keyword} and rownum <= #{startNum} + #{endNum} and p.delete_yn='N'
            join files fs
            on pf.no=fs.no
 		    order by likescount desc)
 		    WHERE rn > #{startNum}
		]]>
			</when>
			 
		</choose>
		<![CDATA[
		]]>
		</select>
	 
 
	 
	 
<!-- 전체 게시물 수  -->
<select id="selectImgPostCnt" resultType="int">
	<![CDATA[
	select count(postno)
    from post
    ]]>
</select>

	 
	 
<!--메인 계정정보 출력 (팔로잉,팔로워,프로필사진)-->
		<select id="selectMainAccINfo" parameterType="String" resultType="com.planit.domain.sns.AccountDTO">
	<![CDATA[
	select userId,ACCDESCRIPTION,PROFILEIMG,FOLLOWERCOUNT,FOLLOWINGCOUNT
	from account
	where userId=#{userId}
	]]>	
		</select>
	 
	 
<!--메인 계정정보 출력 (식물카테고리)-->
		<select id="selectMainCate" parameterType="String" resultType="com.planit.domain.sns.PlantsCateDTO">
	<![CDATA[  
    select plantsname from(
select rownum rn, plantscateno,plantsname from usertoplants
where userid=#{userId}
order by plantscateno desc)
where rownum <= 4
	]]>	
		</select>
		
		
<!-- 프로필 수정 -->
		<update id="updateInfo" parameterType="String">
	<![CDATA[
	UPDATE account
	SET
	ACCDESCRIPTION = #{accDescription},
	profileimg = #{profileImg}
	WHERE
	userId = #{userId}
	]]>	
		</update>
		
		
		<!-- 전체 팔로잉 수  -->
<select id="followingCnt" resultType="int">
	<![CDATA[
	 select count(followingid)
    from follow where followingid=#{userId};
    ]]>
</select>
		
<!-- followList 팔로잉 리스트 출력  -->
			<select id="selectFollowingList" resultType="com.planit.domain.sns.FollowDTO">
 		<![CDATA[
 		select rn,userId,accdescription,profileimg,followerid,followingid,ftype from(
 		select rownum rn,f.userId,a.accdescription,a.profileimg,f.followerid,f.followingid,ftype
        from follow f join account a
        on f.followingid=a.userId
        where followerid=#{userId} and rownum < #{startNum} + #{endNum} )
        WHERE rn >= #{startNum}
        ]]>
			</select>
 
			
			
<!-- followList 팔로워 리스트 출력 f.followerid -->
			<select id="selectFollowerList"  resultType="com.planit.domain.sns.FollowDTO">
		<![CDATA[
	       select rn,userId,accdescription,profileimg,followerid,followingid,ftype from(
 		select rownum rn,f.userId,a.accdescription,a.profileimg,f.followerid,f.followingid,ftype
        from follow f join account a
        on f.userId=a.userId
        where f.followingId=#{userId} and rownum < #{startNum} + #{endNum} )
        WHERE rn >= #{startNum}
 		]]>
			</select>
 
<!-- followList 팔로워 리스트 한번 거르기 -->
	<select id="selectFollowerList2" parameterType="String" resultType="com.planit.domain.sns.FollowDTO">
		<![CDATA[
	    select rownum rn,f.userId,a.accdescription,a.profileimg,f.followerid,f.followingid,ftype
        from follow f join account a
        on f.userId=a.userId
        where  f.followerid=#{parameter1} and f.followingid=#{parameter2}
 		]]>	
 		 </select>
			
 
			
			
<!-- 팔로우 -->
			<insert id="insertFollow" parameterType="HashMap">
		<![CDATA[
		INSERT INTO FOLLOW(userId,FOLLOWERID,FOLLOWINGID,ftype)  VALUES(#{parameter1},#{parameter2},#{parameter3},#{parameter4})
		]]>
		</insert>
		
<!-- 언팔로우 -->
		<delete id="unFollow" parameterType="String">
		<![CDATA[
		delete 
		from follow 
		where userId = #{parameter1} and followingId = #{parameter2}
		]]>
		</delete>
		
<!-- 팔로우 count 업데이트 -->	
		<update id="updateFollowcount">
		update account
	<choose>
		<when test='check.equals("following")'>
			<![CDATA[	set followercount=followercount+1 ]]>
		</when>
		<when test='check.equals("follower")'>
			<![CDATA[	set followingcount=followingcount+1	]]>
		</when>
		<when test='check.equals("unfollowing")'>
			<![CDATA[	set followingcount=followingcount-1	]]>
		</when>
		<when test='check.equals("unfollower")'>
			<![CDATA[	set followercount=followercount-1 ]]>
		</when>
	</choose>
		<![CDATA[
		where userid=#{userId}
		]]>
</update>
		
		
		 
 
		
 
		

		



</mapper>