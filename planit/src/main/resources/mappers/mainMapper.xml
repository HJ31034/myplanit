<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.planit.mapper.main.MainMapper">

	<select id="selectPlantKeyword" parameterType="Integer" resultType="PlantKeywordDTO">
		SELECT keyid, keyname, nvl(pid, 0)
		FROM
			plantkeyword
		<choose>
			<when test="keyId == 0">
			WHERE
				pid IS NULL
			</when>
			<when test="keyId != 0">
			WHERE
				pid = #{keyId}
			</when>
		</choose>
	</select>
	
	<!-- 사용자 계정 추천 -->
	<select id="selectUsers" parameterType="java.util.List" resultType="AccountDTO">
		SELECT *
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY DBMS_RANDOM.RANDOM) AS rn, a.*
			FROM
				account a
		)
		WHERE
		<if test="list.size != 0">
		userId IN (<foreach collection="list" item="item" separator=","> #{item} </foreach>)
		</if>
		
		<if test="list.size == 0">
		rn <![CDATA[ <= ]]> 6
		</if>
		
	</select>
	
	<!-- 추천할 계정이 6보다 작을 경우 실행 -->
	<select id="selectUsers2" parameterType="map" resultType="AccountDTO">
		SELECT *
		FROM (
			SELECT ROW_NUMBER() OVER(ORDER BY DBMS_RANDOM.RANDOM) AS rn, a.*
			FROM
				account a
		)
		WHERE NOT userId In (<foreach collection="list" item="item" separator=","> #{item} </foreach>)
		AND rn <![CDATA[ <= ]]> #{count}
	</select>
	
	<select id="selectPost" resultType="PostDTO">
		SELECT *
		FROM (
			SELECT ROW_NUMBER() OVER (ORDER BY a.createdt DESC) NUM, a.*
			FROM (
			SELECT p.*,u.PLANTSNAME , f.*, RANK () OVER (PARTITION BY p.POSTNO ORDER BY p2.NO) AS rank
			FROM post p LEFT OUTER JOIN USERTOPLANTS u ON (p.plantscateno = u.plantscateno)
						LEFT OUTER JOIN POSTFILES p2 ON p.POSTNO = p2.POSTNO
						LEFT OUTER JOIN FILES f ON p2.NO = f.NO
					) a
			WHERE RANK = 1 AND DELETE_YN = 'N'
		)
		WHERE NUM BETWEEN 1 AND 4
	</select>
	
	<!-- 식물 추천 리스트 -->
	<select id="selectPlantRecommend" parameterType="String" resultType="PlantsDTO">
	<!-- 사용자가 로그인을 하지 않았을 경우 모든 식물에 대해 랜덤 추천 -->
	<if test="userId == null">
	SELECT p2.PLANTSID ,p2.PLANTSNAME ,f3.FILENAME
	FROM PLANTS p2 ,(SELECT f2.PLANTSID, f2.FILENAME 
						FROM (
							SELECT ROW_NUMBER() OVER(ORDER BY DBMS_RANDOM.RANDOM) AS rn, f.PLANTSID, f.FILENAME 
							FROM (
									SELECT RANK () OVER (PARTITION BY p.PLANTSID ORDER BY p.FILENAME) AS RANK, p.*
									FROM PLANTFILE p 
								) f
								WHERE rank = 1 
							) f2
						WHERE rn <![CDATA[ <= ]]> 6) f3
	WHERE p2.PLANTSID = f3.PLANTSID
	</if>
	
	<!-- 사용자가 로그인을 했을 경우 사용자가 회원가입 시 입력했던 관심 키워드 기준으로 랜덤 추천 -->
	<if test="userId != null">
	SELECT  a.PLANTSID, a.PLANTSNAME , a.FILENAME 
	FROM (
	SELECT ROW_NUMBER() OVER(ORDER BY DBMS_RANDOM.RANDOM) AS rn, p3.PLANTSID, p3.PLANTSNAME , p4.FILENAME 
	FROM PLANTKEYWORD p, PLANTSTOKEYWORD p2, PLANTS p3, PLANTFILE p4  
	WHERE p.KEYID IN (SELECT u.KEYID 
						FROM USERKEYWORD u
						WHERE u.USERID = #{userId})
			AND p.KEYID = p2.KEYID
			AND p2.PLANTSID = p3.PLANTSID
			AND p3.PLANTSID = p4.PLANTSID 
		) a 
	WHERE rn <![CDATA[ <= ]]> 6
	</if>
	</select>
 
</mapper>